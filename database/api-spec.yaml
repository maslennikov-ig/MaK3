openapi: 3.0.3
info:
  title: MaK CRM API
  description: API для CRM-системы MaK (2025)
  version: 1.0.0
  contact:
    name: MaK CRM Support
    email: support@makcrm.ru

servers:
  - url: https://api.makcrm.ru/v1
    description: Продакшн сервер
  - url: https://staging-api.makcrm.ru/v1
    description: Тестовый сервер
  - url: http://localhost:3000/v1
    description: Локальный сервер разработки

tags:
  - name: auth
    description: Аутентификация и авторизация
  - name: users
    description: Управление пользователями
  - name: clients
    description: Управление клиентами и лидами
  - name: deals
    description: Управление сделками и воронками
  - name: partners
    description: Управление партнерами и франчайзи
  - name: analytics
    description: Аналитика и отчеты
  - name: components
    description: Управление компонентами и плагинами
  - name: notifications
    description: Управление уведомлениями
  - name: integrations
    description: Интеграции с внешними системами

paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: Вход в систему
      description: Аутентификация пользователя и получение JWT токена
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Успешная аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Неверные учетные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/refresh:
    post:
      tags:
        - auth
      summary: Обновление токена
      description: Обновление JWT токена с использованием refresh токена
      operationId: refreshToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refreshToken
              properties:
                refreshToken:
                  type: string
      responses:
        '200':
          description: Токен успешно обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Недействительный refresh токен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users:
    get:
      tags:
        - users
      summary: Получение списка пользователей
      description: Получение списка пользователей с возможностью фильтрации и пагинации
      operationId: getUsers
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/LimitParam'
        - name: search
          in: query
          description: Поиск по имени, фамилии или email
          schema:
            type: string
        - name: roleId
          in: query
          description: Фильтр по роли
          schema:
            type: integer
        - name: partnerId
          in: query
          description: Фильтр по партнеру
          schema:
            type: integer
        - name: isActive
          in: query
          description: Фильтр по активности
          schema:
            type: boolean
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Список пользователей
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /clients:
    get:
      tags:
        - clients
      summary: Получение списка клиентов
      description: Получение списка клиентов с возможностью фильтрации и пагинации
      operationId: getClients
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/LimitParam'
        - name: search
          in: query
          description: Поиск по имени, email или телефону
          schema:
            type: string
        - name: statusId
          in: query
          description: Фильтр по статусу
          schema:
            type: integer
        - name: partnerId
          in: query
          description: Фильтр по партнеру
          schema:
            type: integer
        - name: userId
          in: query
          description: Фильтр по ответственному
          schema:
            type: integer
        - name: isLead
          in: query
          description: Фильтр по типу (лид/клиент)
          schema:
            type: boolean
        - name: segmentId
          in: query
          description: Фильтр по сегменту
          schema:
            type: integer
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Список клиентов
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Client'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /deals:
    get:
      tags:
        - deals
      summary: Получение списка сделок
      description: Получение списка сделок с возможностью фильтрации и пагинации
      operationId: getDeals
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/LimitParam'
        - name: search
          in: query
          description: Поиск по названию
          schema:
            type: string
        - name: clientId
          in: query
          description: Фильтр по клиенту
          schema:
            type: integer
        - name: pipelineId
          in: query
          description: Фильтр по воронке
          schema:
            type: integer
        - name: stageId
          in: query
          description: Фильтр по этапу
          schema:
            type: integer
        - name: userId
          in: query
          description: Фильтр по ответственному
          schema:
            type: integer
        - name: partnerId
          in: query
          description: Фильтр по партнеру
          schema:
            type: integer
        - name: status
          in: query
          description: Фильтр по статусу
          schema:
            type: string
            enum: [open, won, lost]
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Список сделок
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Deal'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

components:
  schemas:
    AuthResponse:
      type: object
      properties:
        accessToken:
          type: string
          description: JWT токен доступа
        refreshToken:
          type: string
          description: Токен для обновления JWT
        expiresIn:
          type: integer
          description: Время жизни токена в секундах
        user:
          $ref: '#/components/schemas/User'

    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        phone:
          type: string
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        lastLoginAt:
          type: string
          format: date-time
        avatarUrl:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
        partners:
          type: array
          items:
            $ref: '#/components/schemas/Partner'
        settings:
          type: object
          additionalProperties: true

    Role:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        isSystem:
          type: boolean
        partnerId:
          type: integer
          format: int64
          nullable: true
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'

    Permission:
      type: object
      properties:
        id:
          type: integer
          format: int64
        resource:
          type: string
        action:
          type: string

    Client:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
          format: email
          nullable: true
        phone:
          type: string
          nullable: true
        source:
          type: string
          nullable: true
        statusId:
          type: integer
          format: int64
          nullable: true
        partnerId:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        address:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
        isLead:
          type: boolean
        customFields:
          type: object
          additionalProperties: true
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'

    Contact:
      type: object
      properties:
        id:
          type: integer
          format: int64
        clientId:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
          nullable: true
        phone:
          type: string
          nullable: true
        position:
          type: string
          nullable: true
        isPrimary:
          type: boolean
        customFields:
          type: object
          additionalProperties: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Deal:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        clientId:
          type: integer
          format: int64
        pipelineId:
          type: integer
          format: int64
        stageId:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
          nullable: true
        partnerId:
          type: integer
          format: int64
        amount:
          type: number
          format: double
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        closedAt:
          type: string
          format: date-time
          nullable: true
        status:
          type: string
          enum: [open, won, lost]
        probability:
          type: integer
          minimum: 0
          maximum: 100
          nullable: true
        expectedCloseDate:
          type: string
          format: date
          nullable: true
        customFields:
          type: object
          additionalProperties: true

    Partner:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        legalName:
          type: string
          nullable: true
        taxId:
          type: string
          nullable: true
        email:
          type: string
          format: email
        phone:
          type: string
          nullable: true
        status:
          type: string
          enum: [active, inactive, suspended]
        managerId:
          type: integer
          format: int64
          nullable: true
        settings:
          type: object
          additionalProperties: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        logoUrl:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        website:
          type: string
          nullable: true

    Error:
      type: object
      properties:
        statusCode:
          type: integer
        message:
          type: string
        error:
          type: string
        timestamp:
          type: string
          format: date-time
        path:
          type: string

    PaginationMeta:
      type: object
      properties:
        page:
          type: integer
        limit:
          type: integer
        totalItems:
          type: integer
        totalPages:
          type: integer

  parameters:
    PageParam:
      name: page
      in: query
      description: Номер страницы (начиная с 1)
      schema:
        type: integer
        minimum: 1
        default: 1
    
    LimitParam:
      name: limit
      in: query
      description: Количество элементов на странице
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20

  responses:
    Unauthorized:
      description: Не авторизован
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    Forbidden:
      description: Доступ запрещен
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    NotFound:
      description: Ресурс не найден
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    BadRequest:
      description: Некорректный запрос
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
