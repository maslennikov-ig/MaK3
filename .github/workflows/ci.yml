name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      # Frontend
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci
        
      - name: Lint frontend
        working-directory: ./frontend
        run: npm run lint
        
      - name: Format check frontend
        working-directory: ./frontend
        run: npm run format:check
        
      - name: Test frontend
        working-directory: ./frontend
        run: npm test
        
      # Backend
      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci
        
      - name: Lint backend
        working-directory: ./backend
        run: npm run lint
        
      - name: Format check backend
        working-directory: ./backend
        run: npm run format:check
        
      - name: Test backend
        working-directory: ./backend
        run: npm test
        
  build-docker:
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Build frontend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: false
          tags: mak3-frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Build backend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: false
          tags: mak3-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
